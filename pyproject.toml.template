[build-system]
requires = ["maturin >= 1.8.6", "numpy >= 1.26.4"]
build-backend = "maturin"

[project]
name = {{ package_name }}
version = "1.0.0"
description = "Rust and WebAssembly library for late interaction models."
authors = [
    { name = "Raphael Sourty, LightOn", email = "raphael.sourty@lighton.ai" },
]
keywords = []
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Rust",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"

dependencies = ["numpy >= 1.26.4"]


[project.optional-dependencies]
dev = [
    "maturin >= 1.8.6",
    "pytest-cov >= 5.0.0",
    "pytest >= 7.4.4",
    "ruff >= 0.1.15",
    "pre-commit >= 3.0.0",
    "pylate >= 1.2.0",
    "beir>=2.1.0",
    "ranx>=0.3.20",
]

metal = []
accelerate = []
cuda = []
cudnn = []
mkl = []


[project.urls]
Homepage = "https://github.com/lightonai/pylate-rs"
Documentation = "https://github.com/lightonai/pylate-rs"
Repository = "https://github.com/lightonai/pylate-rs"

[tool.include]
include = ["Cargo.toml", "pyproject.toml", "README.md", "src/*"]

[tool.maturin]
bindings = "pyo3"
python-source = "python"
module-name = "pylate_rs.pylate_rs"
features = {{ features }}

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::RuntimeWarning",
    "ignore::UserWarning",
]
addopts = [
    "--doctest-modules",
    "--verbose",
    "-ra",
    "--cov-config=.coveragerc",
    "-m not web and not slow",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "NUMBER"]
norecursedirs = ["build", "docs", "node_modules"]
markers = [
    "web: tests that require using the Internet",
    "slow: tests that take a long time to run",
]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
ignore = [
    "ANN001",
    "TID252",
    "FBT002",
    "ANN201",
    "G004",
    "BLE001",
    "S112",
    "PTH123",
    "S101",
    "ANN204",
    "PLR2004",
    "D104",
    "D100",
    "PTH118",
    "PTH110",
    "PTH103",
    "S311",
    "T201",
    "FBT001",
    "D107",
    "PTH107",
    "PTH109",
    "S603",
    "S607",
    "PGH004",
    "PLC0206",
    "PLW1508",
    "INP001",
    "FIX002",
    "TD003",
    "PGH003",
    "ANN401",
    "PERF401",
    "D203",
    "D213",
    "COM812",
    "N812",
    "PTH207",
    "PTH120",
    "SIM105",
    "PERF203",
    "TRY203",
    "TRY201",
    "PTH112",
    "B905",
    "UP037",
]
select = ["ALL"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
